// <auto-generated />
using System;
using Cathedra.config;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cathedra.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cathedra.model.Discipline", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("discipline_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<long>("helperId")
                        .HasColumnType("bigint")
                        .HasColumnName("helper_id");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<long>("professorId")
                        .HasColumnType("bigint")
                        .HasColumnName("professor_id");

                    b.HasKey("id");

                    b.HasIndex("helperId");

                    b.HasIndex("professorId");

                    b.ToTable("discipline", (string)null);
                });

            modelBuilder.Entity("Cathedra.model.Lesson", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("lesson_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<long>("disciplineId")
                        .HasColumnType("bigint")
                        .HasColumnName("discipline_id");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_time");

                    b.HasKey("id");

                    b.HasIndex("disciplineId");

                    b.ToTable("lesson", (string)null);
                });

            modelBuilder.Entity("Cathedra.model.Worker", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("worker_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("id"));

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("last_name");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("id");

                    b.ToTable("worker", (string)null);
                });

            modelBuilder.Entity("Cathedra.model.Discipline", b =>
                {
                    b.HasOne("Cathedra.model.Worker", null)
                        .WithMany()
                        .HasForeignKey("helperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cathedra.model.Worker", null)
                        .WithMany()
                        .HasForeignKey("professorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Cathedra.model.Lesson", b =>
                {
                    b.HasOne("Cathedra.model.Discipline", null)
                        .WithMany()
                        .HasForeignKey("disciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
